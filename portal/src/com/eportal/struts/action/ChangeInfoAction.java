/*
aaa * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.eportal.struts.action;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.struts2.ServletActionContext;

import com.eportal.ORM.ChangeInfo;
import com.eportal.ORM.Member;
import com.eportal.ORM.Merchandise;
import com.eportal.service.IChangeInfoService;
import com.opensymphony.xwork2.ActionSupport;

/** 
 * MyEclipse Struts
 * Creation date: 
 * 
 * XDoclet definition:
 * @struts.action path="/changeInfo" name="changeInfoForm" input="/form/changeInfo.jsp" validate="true"
 */
public class ChangeInfoAction extends ActionSupport {
	/*
	 * Generated Methods
	 */
	private IChangeInfoService ichangeinfo_biz;
	private List myChangeOrderList;
	private List changeOrderList;
	private List completeOrderList;
	private List unCompleteOrderList;
	private List orderList;
	private int id;
	
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	//根据id来查询交换信息changeUserID
	public String viewChangeInfo(int changeUserId){
		if(changeUserId!=0){
			List list = ichangeinfo_biz.getListByGoodsId(changeUserId);
			return "success";
		}else{
		return null;
		}
	}
	
	//添加交换记录
	public String addChangeInfo(int goodId, int changeGoodId,
			int userId,int changeUserId){
		//创建一个change的实体
		ChangeInfo c = new ChangeInfo();
		//把提出交换的人id放到是实体中
		Member changeU  = new Member();
		changeU.setId(changeUserId);
		c.setUsersInfoByChangeUserId(changeU);
		//把提出叫人的的物品id放到实体中
		Merchandise changeG = new Merchandise();
		changeG.setId(changeGoodId);
		c.setGoodsInfoByChangeGoodsId(changeG);
		//把 要交换的人的id放到实体中
		Member u = new Member();
		u.setId(userId);
		c.setUsersInfoByUserId(u);
		//把要交换人的物品的id放到实体中
		Merchandise g = new Merchandise();
		g.setId(goodId);
		c.setGoodsInfoByGoodsId(g);
		//把状态放到实体中 初始为1换主正在考虑中
		c.setChangeState(1);
		//时间
		Date d = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		c.setChangeTime(sdf.format(d));
		//存在 1默认
		c.setChangeExist((byte)1);
		boolean b = ichangeinfo_biz.addChange(c);
		return null;
	}
	
	//获取所有订单
	public String loadAllOrders(){
		Member u = (Member)ServletActionContext.getRequest().getSession().getAttribute("member");
		//获取我发起的交换
		myChangeOrderList=ichangeinfo_biz.getListByChangeUserId(u.getId());
		//获取我收到的交换
		changeOrderList=ichangeinfo_biz.getListByUserId(u.getId());		
		//获取未完成订单
		unCompleteOrderList=ichangeinfo_biz.getByStatus(2);
		//获取已完成订单
		completeOrderList=ichangeinfo_biz.getByStatus(3);
		return "success";
	}
	
	//管理换单
	public String loadAllChange(){
		orderList=ichangeinfo_biz.getAllChange();
		return "success";
	}
	//删除
	public String delChanges(){
		
		boolean b=ichangeinfo_biz.delChangeById(ichangeinfo_biz.getChangeInfoById(id));
		if(b){
		return "success";
		}else{
			return "fail";
		}
	}
	
	public IChangeInfoService getIchangeinfo_biz() {
		return ichangeinfo_biz;
	}
	public void setIchangeinfo_biz(IChangeInfoService ichangeinfo_biz) {
		this.ichangeinfo_biz = ichangeinfo_biz;
	}

	public List getMyChangeOrderList() {
		return myChangeOrderList;
	}

	public void setMyChangeOrderList(List myChangeOrderList) {
		this.myChangeOrderList = myChangeOrderList;
	}

	public List getChangeOrderList() {
		return changeOrderList;
	}

	public void setChangeOrderList(List changeOrderList) {
		this.changeOrderList = changeOrderList;
	}

	public List getCompleteOrderList() {
		return completeOrderList;
	}

	public void setCompleteOrderList(List completeOrderList) {
		this.completeOrderList = completeOrderList;
	}

	public List getUnCompleteOrderList() {
		return unCompleteOrderList;
	}

	public void setUnCompleteOrderList(List unCompleteOrderList) {
		this.unCompleteOrderList = unCompleteOrderList;
	}

	public List getOrderList() {
		return orderList;
	}

	public void setOrderList(List orderList) {
		this.orderList = orderList;
	}
	
}