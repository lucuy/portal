/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.eportal.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;

import com.eportal.ORM.ChangeInfo;
import com.eportal.ORM.LeaveGoodsMessage;
import com.eportal.ORM.Member;
import com.eportal.ORM.Merchandise;
import com.eportal.service.IChangeInfoService;
import com.eportal.service.LeaveGoodsMessageService;
import com.eportal.service.MemberService;
import com.eportal.service.MerchandiseService;
import com.opensymphony.xwork2.ActionSupport;


public class LeaveGoodsMessageAction extends ActionSupport {
	
	LeaveGoodsMessageService leaveService;
	MerchandiseService merService;
	MemberService memberService;
	IChangeInfoService changeinfoService;
	int memId;
	int membId;
	String content;
	int myMerId;
	private int messageId;
	private String actionMsg;	//Action间传递的消息参数

	private Merchandise model=new Merchandise();//用于封装商品属性模型
	private List list;
	private int id;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public List getList() {
		return list;
	}
	public void setList(List list) {
		this.list = list;
	}
	public Merchandise getModel() {
		return model;
	}
	public void setModel(Merchandise model) {
		this.model = model;
	}
	public String addLeaveMessage() {
		
		if(memId!=0)
		{
			LeaveGoodsMessage l = new LeaveGoodsMessage();
			//获得物品的id
			Merchandise mermg  = new Merchandise();
			mermg = merService.loadMerchandise(memId);
			l.setMerchandInfo(mermg);
			//获得我的物品id
			Merchandise myMermg  = new Merchandise();
			myMermg=merService.loadMerchandise(myMerId);
			//boolean bb=merService.saveOrUpdateMerchandise(myMermg);
			l.setMyMerchandInfo(myMermg);
			//获得用户的id
			/*Member u = merService.loadMerchandise(memId).getMember();*/
			Member u = (Member)ServletActionContext.getRequest().getSession().getAttribute("member");
			u.setId(u.getId());
			l.setMemberInfo(u);
			//把留言内容放入实体类中
			
			l.setMessageContent(content);
			//把留言时间放到实体类中
			Date d = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			l.setMessageTime(sdf.format(d));
			//默认存在
			l.setMessageExist((byte)1);
			myMermg.setMerStatus(1);
			boolean bm=merService.saveOrUpdateMerchandise(myMermg);
			
			boolean b = leaveService.saveOrUpdateLeaveMessage(l);
		try {
			ServletActionContext.getResponse().getWriter().write(b+"");
			ServletActionContext.getResponse().getWriter().close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		//添加我发起的换物单
		ChangeInfo changInfo=new ChangeInfo();
		changInfo.setGoodsInfoByChangeGoodsId(myMermg);
		changInfo.setUsersInfoByChangeUserId(u);
		changInfo.setGoodsInfoByGoodsId(mermg);
		changInfo.setUsersInfoByUserId(mermg.getMember());
		changInfo.setChangeExist((byte)0);
		changInfo.setChangeState(1);
		//SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd"); 
		changInfo.setChangeTime(sdf.format(new Date())); 
		
		boolean bc=changeinfoService.addChange(changInfo);
		if(bc==true){
			l.setChangeInfo(changInfo);
			leaveService.saveOrUpdateLeaveMessage(l);
		}
		return "success";
		}
		return null;
	}
	public String showMessage(){
		//LeaveGoodsMessage l = new LeaveGoodsMessage();
		if (id!=0){
			list =leaveService.getAllGoodsMessage(id);
			return "success";
		}else{
		return null;
		}
	} 
	public String getAllMessages(){
		list=leaveService.getAllMessages();
		return "success";
		
	}
	
	public String changeMessageStatus(){
		
		return "success";
	}
	/**未查看过的信息*/
	public String newMessages(){
		if(actionMsg!=null){
			try {
				actionMsg = new String(actionMsg.getBytes("ISO8859-1"),"gbk");
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
			addActionMessage(actionMsg);
		}
		Member u = (Member)ServletActionContext.getRequest().getSession().getAttribute("member");
		if (u==null){//当前会员进行订单管理
			addActionMessage(getText("orders_add_notlogin"));
		}else{
			
			list=leaveService.getAllGoodsMessageByMemb(u.getId());
		}
		return SUCCESS;
	}
	
	public String delMessage(){
		
		boolean b=leaveService.delGoodsMessage(leaveService.loadGoodsMessage(id));
		if(b){
		return "success";
		}else{
			return "fail";
		}
	}

	public int getMemId() {
		return memId;
	}

	public void setMemId(int memId) {
		this.memId = memId;
	}

	public int getMembId() {
		return membId;
	}

	public void setMembId(int membId) {
		this.membId = membId;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public LeaveGoodsMessageService getLeaveService() {
		return leaveService;
	}

	public void setLeaveService(LeaveGoodsMessageService leaveService) {
		this.leaveService = leaveService;
	}

	public MerchandiseService getMerService() {
		return merService;
	}

	public void setMerService(MerchandiseService merService) {
		this.merService = merService;
	}

	public MemberService getMemberService() {
		return memberService;
	}

	public void setMemberService(MemberService memberService) {
		this.memberService = memberService;
	}
	public int getMyMerId() {
		return myMerId;
	}
	public void setMyMerId(int myMerId) {
		this.myMerId = myMerId;
	}
	public IChangeInfoService getChangeinfoService() {
		return changeinfoService;
	}
	public void setChangeinfoService(IChangeInfoService changeinfoService) {
		this.changeinfoService = changeinfoService;
	}
	public int getMessageId() {
		return messageId;
	}
	public void setMessageId(int messageId) {
		this.messageId = messageId;
	}
	public String getActionMsg() {
		return actionMsg;
	}
	public void setActionMsg(String actionMsg) {
		this.actionMsg = actionMsg;
	}
	
}